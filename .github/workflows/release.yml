name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"
          cache: true

      - name: Setup Ruby for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
          working-directory: android
        continue-on-error: true

      - name: Install dependencies
        run: flutter pub get

      - name: Debug Flutter environment
        run: |
          flutter --version
          flutter doctor -v
          ls -la
          ls -la android/

      - name: Configure Flutter platforms
        run: |
          flutter config --enable-web
          flutter config --no-enable-windows-desktop
          flutter config --no-enable-macos-desktop
          flutter config --no-enable-linux-desktop

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs
        continue-on-error: true

      - name: Run tests
        run: flutter test --coverage
        continue-on-error: true

      - name: Decode keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          mkdir -p android/keystore
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/keystore/otogapo-release.jks

      - name: Create key.properties
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          cat > android/key.properties << EOF
          storeFile=keystore/otogapo-release.jks
          storePassword=$KEYSTORE_PASSWORD
          keyAlias=$KEY_ALIAS
          keyPassword=$KEY_PASSWORD
          EOF

      - name: Build Android App Bundle
        run: |
          flutter build appbundle \
            --release \
            --target lib/main_production.dart \
            --flavor production

      - name: Build Android APK
        run: |
          flutter build apk \
            --release \
            --target lib/main_production.dart \
            --flavor production

      - name: Build Web
        run: |
          flutter build web \
            --release \
            --target lib/main_production.dart \
            --base-href /

      - name: Create web archive
        run: |
          cd build/web
          zip -r ../otogapo-web-${{ github.ref_name }}.zip .
          cd ../..

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
          else
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s" --no-merges)
          fi

          # Save to file for release notes
          echo "$CHANGELOG" > RELEASE_NOTES.md

          # Also set as output (truncated for GitHub)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.version.outputs.version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            build/app/outputs/bundle/productionRelease/app-production-release.aab
            build/app/outputs/flutter-apk/app-production-release.apk
            build/otogapo-web-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Google Play credentials
        id: check_gp_creds
        run: |
          if [ -n "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}" ]; then
            echo "has_gp_creds=true" >> $GITHUB_OUTPUT
          else
            echo "has_gp_creds=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload to Google Play Console (Internal Track)
        if: steps.check_gp_creds.outputs.has_gp_creds == 'true'
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        run: |
          cd android
          bundle exec fastlane internal

      - name: Cleanup keystore
        if: always()
        run: |
          rm -f android/keystore/otogapo-release.jks
          rm -f android/key.properties
